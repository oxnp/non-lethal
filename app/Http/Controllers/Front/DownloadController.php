<?php

namespace App\Http\Controllers\Front;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class DownloadController extends Controller
{
    public function getFile(Request $request){
        define( 'DS', DIRECTORY_SEPARATOR );
        $download_key = $_GET['type'];
        $folder_path = '';
        $root_link = $_SERVER['DOCUMENT_ROOT'].DS;
        if($download_key == 'vs')
        {
            $folder_path = 'videoslave3';
        }
        else if ($download_key == 'vs4')
        {
            $folder_path = 'videoslave4';
        }
        else if ($download_key == 'adrm')
        {
            $folder_path = 'adrmaster';
        }
        else if ($download_key == 'tc')
        {
            $folder_path = 'tccalculator';
        }
        else if ($download_key == 'snap')
        {
            $folder_path = 'snapshot';
        }
        else if ($download_key == 'dawl')
        {
            $folder_path = 'dawlink';
        }

        $directory = $root_link. DS .'public'.DS. 'nla_files' . DS . 'latest_version' . DS . $folder_path;

        $dir_handle = @opendir($directory) or die("There is an error with your file directory!");

        while ($file = readdir($dir_handle))
        {
            /* Skipping the system files: */
            if($file{0}=='.') continue;

            /* end() returns the last element of the array generated by the explode() function: */
            $parts = explode('.',$file);
            $extension = strtolower(end($parts));

            /* Skipping the php files: */
            if($extension == 'php') continue;

            $files_array[]=$file;
        }

        $download_file = $files_array[0];

        if($download_file <> '')
        {
            // Update Count Number of Download
            //$nlahelper->UpdateNumberofDownload($download_file);

            // Download
            header("Location: ".self::full_path(). DS . 'nla_files' . DS . 'latest_version' . DS . $folder_path . DS .$download_file);
        }

        exit;

        ob_end_flush();
    }

    public function full_path()
    {
        $s = &$_SERVER;
        $ssl = (!empty($s['HTTPS']) && $s['HTTPS'] == 'on') ? true:false;
        $sp = strtolower($s['SERVER_PROTOCOL']);
        $protocol = substr($sp, 0, strpos($sp, '/')) . (($ssl) ? 's' : '');
        $port = $s['SERVER_PORT'];
        $port = ((!$ssl && $port=='80') || ($ssl && $port=='443')) ? '' : ':'.$port;
        $host = isset($s['HTTP_X_FORWARDED_HOST']) ? $s['HTTP_X_FORWARDED_HOST'] : (isset($s['HTTP_HOST']) ? $s['HTTP_HOST'] : null);
        $host = isset($host) ? $host : $s['SERVER_NAME'] . $port;
        $uri = $protocol . '://' . $host ;
        //$segments = explode('?', $uri, 2);
        $url = $uri;
        return $url;
    }
}
